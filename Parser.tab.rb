#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'
class Parser < Racc::Parser

module_eval(<<'...end Parser.y/module_eval...', 'Parser.y', 185)
    def parse(lexer)
          @yydebug = true # DEBUG
    end
...end Parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    18,   101,    19,    96,    20,   102,    95,   100,   101,    17,
    62,    94,   102,    25,    32,    15,    42,    43,    41,    44,
    37,    51,    52,    35,    14,    70,    16,     9,    12,    13,
    59,     3,   103,    22,     8,     6,   105,    18,    63,    19,
     4,    20,     5,     7,    61,   109,    17,    21,    11,     2,
   111,   112,    15,    42,    43,    41,    44,    37,    51,    52,
   109,    14,   114,    16,     9,    12,    13,   115,     3,    65,
   117,     8,     6,    70,    18,   nil,    19,     4,    20,     5,
     7,   nil,   nil,    17,   nil,    11,     2,   nil,   nil,    15,
    18,   nil,    19,   nil,    20,    41,    44,    37,    14,    17,
    16,   nil,    12,    13,   nil,    15,    42,    43,    41,    44,
    37,    51,   nil,   nil,    14,   nil,    16,     9,    12,    13,
   nil,     3,    11,    30,     8,     6,   nil,    18,   nil,    19,
     4,    20,     5,     7,   nil,   nil,    17,   nil,    11,     2,
   nil,   nil,    15,    42,    43,    41,    44,    37,    41,    44,
    37,    14,   nil,    16,     9,    12,    13,   nil,     3,   nil,
   nil,     8,     6,   nil,    18,   nil,    19,     4,    20,     5,
     7,   nil,   nil,    17,   nil,    11,     2,   nil,   nil,    15,
    18,   nil,    19,   nil,    20,   nil,   nil,   nil,    14,    17,
    16,   nil,    12,    13,   nil,    15,    18,   nil,    19,   nil,
    20,   nil,    28,   nil,    14,    17,    16,   nil,    12,    13,
   nil,    15,    11,    30,    42,    43,    41,    44,    37,   nil,
    14,   nil,    16,   nil,    12,    13,   nil,   nil,    11,    30,
   nil,    18,   nil,    19,   nil,    20,   nil,   nil,   nil,   nil,
    17,   nil,   nil,   nil,    11,    30,    15,    18,   nil,    19,
   nil,    20,   nil,   nil,   nil,    14,    17,    16,   nil,    12,
    13,   nil,    15,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    14,   nil,    16,     9,    12,    13,   nil,     3,    11,
    30,     8,     6,   nil,    18,   nil,    19,     4,    20,     5,
     7,   nil,   nil,    17,   nil,    11,     2,   nil,   nil,    15,
    18,   nil,    19,   nil,    20,   nil,   nil,   nil,    14,    17,
    16,   nil,    12,    13,   nil,    15,    18,   nil,    19,   nil,
    20,   nil,    28,   nil,    14,    17,    16,   nil,    12,    13,
   nil,    15,    11,    30,   nil,   nil,   nil,   nil,   nil,   nil,
    14,   nil,    16,   nil,    12,    13,   nil,   nil,    11,    30,
   nil,    18,   nil,    19,   nil,    20,   nil,   nil,   nil,    18,
    17,    19,   nil,    20,    11,    30,    15,    18,    17,    19,
   nil,    20,   nil,   nil,    15,    14,    17,    16,   nil,    12,
    13,   nil,    15,    14,   nil,    16,   nil,    12,    13,   nil,
   nil,    14,   nil,    16,   nil,    12,    13,   nil,   nil,    11,
    30,   nil,    18,   nil,    19,   nil,    20,    11,    30,   nil,
   nil,    17,   nil,   nil,   nil,    11,    30,    15,    18,   nil,
    19,   nil,    20,   nil,   nil,   nil,    14,    17,    16,   nil,
    12,    13,   nil,    15,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    14,   nil,    16,     9,    12,    13,   nil,     3,
    11,    30,     8,     6,   nil,    18,   nil,    19,     4,    20,
     5,     7,   nil,   nil,    17,   nil,    11,     2,   nil,   nil,
    15,    18,   nil,    19,   nil,    20,   nil,   nil,   nil,    14,
    17,    16,   nil,    12,    13,   nil,    15,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,    14,   nil,    16,     9,    12,
    13,   nil,     3,    11,    30,     8,     6,   nil,    18,   nil,
    19,     4,    20,     5,     7,   nil,   nil,    17,   nil,    11,
     2,   nil,   nil,    15,    18,   nil,    19,   nil,    20,   nil,
   nil,   nil,    14,    17,    16,   nil,    12,    13,   nil,    15,
    18,   nil,    19,   nil,    20,   nil,   nil,   nil,    14,    17,
    16,   nil,    12,    13,   nil,    15,    11,    30,   nil,   nil,
   nil,   nil,   nil,   nil,    14,   nil,    16,   nil,    12,    13,
   nil,   nil,    11,    30,   nil,    18,   nil,    19,   nil,    20,
   nil,   nil,   nil,    18,    17,    19,   nil,    20,    11,    30,
    15,    18,    17,    19,   nil,    20,   nil,   nil,    15,    14,
    17,    16,   nil,    12,    13,   nil,    15,    14,   nil,    16,
   nil,    12,    13,   nil,   nil,    14,   nil,    16,   nil,    12,
    13,   nil,   nil,    11,    30,   nil,    18,   nil,    19,   nil,
    20,    11,    30,   nil,    18,    17,    19,   nil,    20,    11,
    30,    15,    18,    17,    19,   nil,    20,   nil,   nil,    15,
    14,    17,    16,   nil,    12,    13,   nil,    15,    14,   nil,
    16,   nil,    12,    13,   nil,   nil,    14,   nil,    16,   nil,
    12,    13,   nil,   nil,    11,    30,   nil,    18,   nil,    19,
   nil,    20,    11,    30,   nil,    18,    17,    19,   nil,    20,
    11,    30,    15,    18,    17,    19,   nil,    20,   nil,   nil,
    15,    14,    17,    16,   nil,    12,    13,   nil,    15,    14,
   nil,    16,   nil,    12,    13,   nil,   nil,    14,   nil,    16,
   nil,    12,    13,   nil,   nil,    11,    30,   nil,    18,   nil,
    19,   nil,    20,    11,    30,   nil,    18,    17,    19,   nil,
    20,    11,    30,    15,    18,    17,    19,   nil,    20,   nil,
   nil,    15,    14,    17,    16,   nil,    12,    13,   nil,    15,
    14,   nil,    16,   nil,    12,    13,   nil,   nil,    14,   nil,
    16,   nil,    12,    13,   nil,   nil,    11,    30,   nil,   nil,
   nil,   nil,   nil,   nil,    11,    30,   nil,   nil,   nil,   nil,
   nil,   nil,    11,    30,    42,    43,    41,    44,    37,    51,
    52,   nil,    45,    46,    47,    49,    50,    48,    38,    39,
   nil,    40,    42,    43,    41,    44,    37,    51,    52,   nil,
    45,    46,    47,    49,    50,    48,    38,    39,   nil,    40,
    36,   nil,    97,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    64,    42,    43,    41,    44,    37,    51,    52,   nil,    45,
    46,    47,    49,    50,    48,    38,    39,    86,    40,   nil,
   nil,   nil,   nil,   nil,    42,    43,    41,    44,    37,    51,
    52,   nil,    45,    46,    47,    49,    50,    48,    38,    39,
   107,    40,   nil,   nil,   106,   nil,    42,    43,    41,    44,
    37,    51,    52,   nil,    45,    46,    47,    49,    50,    48,
    38,    39,    87,    40,   nil,   nil,   nil,    42,    43,    41,
    44,    37,    51,    52,   nil,    45,    46,    47,    49,    50,
    48,    38,    39,    88,    40,   nil,    42,    43,    41,    44,
    37,    51,    52,   nil,    45,    46,    47,    49,    50,    48,
    38,    39,    66,    40,    42,    43,    41,    44,    37,    51,
    52,   nil,    45,    46,    47,    49,    50,    48,    38,    39,
   nil,    40,    42,    43,    41,    44,    37,    51,    52,   nil,
    45,    46,    47,    49,    50,    48,    38,    39,   nil,    40,
    42,    43,    41,    44,    37,    51,    52,   nil,    45,    46,
    47,    49,    50,    48,    38,    39,   nil,    40,    42,    43,
    41,    44,    37,    51,    52,   nil,    45,    46,    47,    49,
    50,    48,    38,    39,   nil,    40,    42,    43,    41,    44,
    37,    51,    52,   nil,    45,    46,    47,    49,    50,    48,
    38,    39,    42,    43,    41,    44,    37,    51,    52,   nil,
    45,    46,    47,    49,    50,    48,    38,    39,    42,    43,
    41,    44,    37,    51,    52,   nil,    45,   -56,   -56,   -56,
   -56,    48,    42,    43,    41,    44,    37,    51,    52,   nil,
    45,   -56,   -56,   -56,   -56,    48,    42,    43,    41,    44,
    37,    51,    52,   nil,    45,   -56,   -56,   -56,   -56,    48,
    42,    43,    41,    44,    37,    51,    52,   nil,    45,   -56,
   -56,   -56,   -56,    48 ]

racc_action_check = [
     0,    95,     0,    69,     0,    95,    69,    95,   114,     0,
    23,    67,   114,     4,     7,     0,    81,    81,    81,    81,
    81,    81,    81,     9,     0,    94,     0,     0,     0,     0,
    21,     0,    96,     2,     0,     0,   100,   106,    26,   106,
     0,   106,     0,     0,    23,   105,   106,     1,     0,     0,
   107,   108,   106,    78,    78,    78,    78,    78,    78,    78,
   111,   106,   112,   106,   106,   106,   106,   113,   106,    32,
   115,   106,   106,    35,    97,   nil,    97,   106,    97,   106,
   106,   nil,   nil,    97,   nil,   106,   106,   nil,   nil,    97,
     3,   nil,     3,   nil,     3,    75,    75,    75,    97,     3,
    97,   nil,    97,    97,   nil,     3,    85,    85,    85,    85,
    85,    85,   nil,   nil,     3,   nil,     3,     3,     3,     3,
   nil,     3,    97,    97,     3,     3,   nil,    66,   nil,    66,
     3,    66,     3,     3,   nil,   nil,    66,   nil,     3,     3,
   nil,   nil,    66,    84,    84,    84,    84,    84,    76,    76,
    76,    66,   nil,    66,    66,    66,    66,   nil,    66,   nil,
   nil,    66,    66,   nil,     5,   nil,     5,    66,     5,    66,
    66,   nil,   nil,     5,   nil,    66,    66,   nil,   nil,     5,
     6,   nil,     6,   nil,     6,   nil,   nil,   nil,     5,     6,
     5,   nil,     5,     5,   nil,     6,    65,   nil,    65,   nil,
    65,   nil,     5,   nil,     6,    65,     6,   nil,     6,     6,
   nil,    65,     5,     5,    53,    53,    53,    53,    53,   nil,
    65,   nil,    65,   nil,    65,    65,   nil,   nil,     6,     6,
   nil,     8,   nil,     8,   nil,     8,   nil,   nil,   nil,   nil,
     8,   nil,   nil,   nil,    65,    65,     8,    64,   nil,    64,
   nil,    64,   nil,   nil,   nil,     8,    64,     8,   nil,     8,
     8,   nil,    64,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,    64,   nil,    64,    64,    64,    64,   nil,    64,     8,
     8,    64,    64,   nil,    63,   nil,    63,    64,    63,    64,
    64,   nil,   nil,    63,   nil,    64,    64,   nil,   nil,    63,
    15,   nil,    15,   nil,    15,   nil,   nil,   nil,    63,    15,
    63,   nil,    63,    63,   nil,    15,    16,   nil,    16,   nil,
    16,   nil,    63,   nil,    15,    16,    15,   nil,    15,    15,
   nil,    16,    63,    63,   nil,   nil,   nil,   nil,   nil,   nil,
    16,   nil,    16,   nil,    16,    16,   nil,   nil,    15,    15,
   nil,    17,   nil,    17,   nil,    17,   nil,   nil,   nil,    18,
    17,    18,   nil,    18,    16,    16,    17,    19,    18,    19,
   nil,    19,   nil,   nil,    18,    17,    19,    17,   nil,    17,
    17,   nil,    19,    18,   nil,    18,   nil,    18,    18,   nil,
   nil,    19,   nil,    19,   nil,    19,    19,   nil,   nil,    17,
    17,   nil,    20,   nil,    20,   nil,    20,    18,    18,   nil,
   nil,    20,   nil,   nil,   nil,    19,    19,    20,    62,   nil,
    62,   nil,    62,   nil,   nil,   nil,    20,    62,    20,   nil,
    20,    20,   nil,    62,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,    62,   nil,    62,    62,    62,    62,   nil,    62,
    20,    20,    62,    62,   nil,    22,   nil,    22,    62,    22,
    62,    62,   nil,   nil,    22,   nil,    62,    62,   nil,   nil,
    22,   117,   nil,   117,   nil,   117,   nil,   nil,   nil,    22,
   117,    22,   nil,    22,    22,   nil,   117,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   117,   nil,   117,   117,   117,
   117,   nil,   117,    22,    22,   117,   117,   nil,    52,   nil,
    52,   117,    52,   117,   117,   nil,   nil,    52,   nil,   117,
   117,   nil,   nil,    52,    51,   nil,    51,   nil,    51,   nil,
   nil,   nil,    52,    51,    52,   nil,    52,    52,   nil,    51,
    50,   nil,    50,   nil,    50,   nil,   nil,   nil,    51,    50,
    51,   nil,    51,    51,   nil,    50,    52,    52,   nil,   nil,
   nil,   nil,   nil,   nil,    50,   nil,    50,   nil,    50,    50,
   nil,   nil,    51,    51,   nil,    49,   nil,    49,   nil,    49,
   nil,   nil,   nil,    48,    49,    48,   nil,    48,    50,    50,
    49,    47,    48,    47,   nil,    47,   nil,   nil,    48,    49,
    47,    49,   nil,    49,    49,   nil,    47,    48,   nil,    48,
   nil,    48,    48,   nil,   nil,    47,   nil,    47,   nil,    47,
    47,   nil,   nil,    49,    49,   nil,    36,   nil,    36,   nil,
    36,    48,    48,   nil,    37,    36,    37,   nil,    37,    47,
    47,    36,    40,    37,    40,   nil,    40,   nil,   nil,    37,
    36,    40,    36,   nil,    36,    36,   nil,    40,    37,   nil,
    37,   nil,    37,    37,   nil,   nil,    40,   nil,    40,   nil,
    40,    40,   nil,   nil,    36,    36,   nil,    41,   nil,    41,
   nil,    41,    37,    37,   nil,    42,    41,    42,   nil,    42,
    40,    40,    41,    43,    42,    43,   nil,    43,   nil,   nil,
    42,    41,    43,    41,   nil,    41,    41,   nil,    43,    42,
   nil,    42,   nil,    42,    42,   nil,   nil,    43,   nil,    43,
   nil,    43,    43,   nil,   nil,    41,    41,   nil,    44,   nil,
    44,   nil,    44,    42,    42,   nil,    45,    44,    45,   nil,
    45,    43,    43,    44,    46,    45,    46,   nil,    46,   nil,
   nil,    45,    44,    46,    44,   nil,    44,    44,   nil,    46,
    45,   nil,    45,   nil,    45,    45,   nil,   nil,    46,   nil,
    46,   nil,    46,    46,   nil,   nil,    44,    44,   nil,   nil,
   nil,   nil,   nil,   nil,    45,    45,   nil,   nil,   nil,   nil,
   nil,   nil,    46,    46,    92,    92,    92,    92,    92,    92,
    92,   nil,    92,    92,    92,    92,    92,    92,    92,    92,
   nil,    92,    31,    31,    31,    31,    31,    31,    31,   nil,
    31,    31,    31,    31,    31,    31,    31,    31,   nil,    31,
    10,   nil,    92,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
    31,    10,    10,    10,    10,    10,    10,    10,   nil,    10,
    10,    10,    10,    10,    10,    10,    10,    56,    10,   nil,
   nil,   nil,   nil,   nil,    56,    56,    56,    56,    56,    56,
    56,   nil,    56,    56,    56,    56,    56,    56,    56,    56,
   104,    56,   nil,   nil,   104,   nil,   104,   104,   104,   104,
   104,   104,   104,   nil,   104,   104,   104,   104,   104,   104,
   104,   104,    57,   104,   nil,   nil,   nil,    57,    57,    57,
    57,    57,    57,    57,   nil,    57,    57,    57,    57,    57,
    57,    57,    57,    58,    57,   nil,    58,    58,    58,    58,
    58,    58,    58,   nil,    58,    58,    58,    58,    58,    58,
    58,    58,    33,    58,    33,    33,    33,    33,    33,    33,
    33,   nil,    33,    33,    33,    33,    33,    33,    33,    33,
   nil,    33,    29,    29,    29,    29,    29,    29,    29,   nil,
    29,    29,    29,    29,    29,    29,    29,    29,   nil,    29,
    71,    71,    71,    71,    71,    71,    71,   nil,    71,    71,
    71,    71,    71,    71,    71,    71,   nil,    71,    60,    60,
    60,    60,    60,    60,    60,   nil,    60,    60,    60,    60,
    60,    60,    60,    60,   nil,    60,    54,    54,    54,    54,
    54,    54,    54,   nil,    54,    54,    54,    54,    54,    54,
    54,    54,    73,    73,    73,    73,    73,    73,    73,   nil,
    73,    73,    73,    73,    73,    73,    73,    73,    82,    82,
    82,    82,    82,    82,    82,   nil,    82,    82,    82,    82,
    82,    82,    80,    80,    80,    80,    80,    80,    80,   nil,
    80,    80,    80,    80,    80,    80,    83,    83,    83,    83,
    83,    83,    83,   nil,    83,    83,    83,    83,    83,    83,
    79,    79,    79,    79,    79,    79,    79,   nil,    79,    79,
    79,    79,    79,    79 ]

racc_action_pointer = [
    -6,    47,    20,    84,   -42,   158,   174,   -41,   225,   -13,
   827,   nil,   nil,   nil,   nil,   294,   310,   345,   353,   361,
   396,    30,   449,     6,   nil,   nil,    36,   nil,   nil,   948,
   nil,   798,    18,   930,   nil,    18,   620,   628,   nil,   nil,
   636,   671,   679,   687,   722,   730,   738,   585,   577,   569,
   534,   518,   502,   200,  1002,   nil,   850,   893,   912,   nil,
   984,   nil,   412,   278,   241,   190,   121,     7,   nil,     1,
   nil,   966,   nil,  1018,   nil,    79,   132,   nil,    39,  1076,
  1048,     2,  1034,  1062,   129,    92,   nil,   nil,   nil,   nil,
   nil,   nil,   780,   nil,   -30,   -38,   -23,    68,   nil,   nil,
    28,   nil,   nil,   nil,   872,    -9,    31,     0,    42,   nil,
   nil,     6,    15,    58,   -31,    58,   nil,   465,   nil ]

racc_action_default = [
   -56,   -56,   -32,   -56,   -56,   -56,   -56,   -56,   -56,   -10,
   -56,   -29,   -30,   -31,   -33,   -56,   -56,   -56,   -56,   -56,
   -56,   -56,   -56,   -56,   -12,    -3,    -4,   -24,   -26,   -27,
   -32,   -56,   -56,   -56,    -9,   -17,   -56,   -56,   -35,   -36,
   -56,   -56,   -56,   -56,   -56,   -56,   -56,   -56,   -56,   -56,
   -56,   -56,   -56,   -50,   -51,   -52,   -56,   -56,   -56,   119,
    -1,    -2,   -56,   -56,   -56,   -56,   -56,   -14,   -15,   -56,
   -23,   -11,   -34,   -37,   -38,   -39,   -40,   -41,   -42,   -43,
   -44,   -45,   -46,   -47,   -48,   -49,   -53,   -54,   -55,   -13,
   -25,    -5,   -56,    -8,   -17,   -56,   -56,   -56,   -16,   -18,
   -56,   -20,   -21,   -22,   -56,   -56,   -56,   -56,   -56,   -28,
    -6,   -56,   -56,   -56,   -56,   -56,   -19,   -56,    -7 ]

racc_goto_table = [
     1,    29,    31,    24,    33,    27,    68,    99,    23,    67,
    34,    53,    54,    55,    56,    57,    58,   108,    60,    26,
   nil,   nil,   nil,   113,   nil,   nil,   116,   nil,   nil,   nil,
   nil,   nil,    71,    72,   nil,   nil,    73,    74,    75,    76,
    77,    78,    79,    80,    81,    82,    83,    84,    85,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    29,
   nil,    92,    89,    90,    91,    98,    93,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   104,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   110,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   118 ]

racc_goto_check = [
     1,     2,     2,     1,     2,    11,     8,    10,     3,     7,
     6,     2,     2,     2,     2,     2,     2,     5,     2,     4,
   nil,   nil,   nil,     5,   nil,   nil,    10,   nil,   nil,   nil,
   nil,   nil,     2,     2,   nil,   nil,     2,     2,     2,     2,
     2,     2,     2,     2,     2,     2,     2,     2,     2,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,
   nil,     2,     1,    11,     1,     8,     1,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,     1,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     1 ]

racc_goto_pointer = [
   nil,     0,    -4,     5,    14,   -88,     1,   -26,   -29,   nil,
   -88,     0 ]

racc_goto_default = [
   nil,   nil,    10,   nil,   nil,   nil,   nil,   nil,   nil,    69,
   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 57, :_reduce_1,
  3, 57, :_reduce_2,
  2, 57, :_reduce_3,
  2, 57, :_reduce_4,
  4, 57, :_reduce_5,
  8, 57, :_reduce_6,
  12, 57, :_reduce_7,
  4, 57, :_reduce_8,
  2, 57, :_reduce_9,
  1, 57, :_reduce_10,
  3, 57, :_reduce_11,
  1, 59, :_reduce_12,
  3, 59, :_reduce_13,
  2, 62, :_reduce_14,
  1, 63, :_reduce_15,
  3, 63, :_reduce_16,
  0, 64, :_reduce_none,
  3, 64, :_reduce_18,
  8, 64, :_reduce_19,
  1, 66, :_reduce_20,
  1, 66, :_reduce_21,
  3, 65, :_reduce_22,
  1, 65, :_reduce_23,
  1, 60, :_reduce_24,
  3, 60, :_reduce_25,
  1, 67, :_reduce_26,
  1, 67, :_reduce_27,
  1, 61, :_reduce_28,
  1, 58, :_reduce_29,
  1, 58, :_reduce_30,
  1, 58, :_reduce_31,
  1, 58, :_reduce_32,
  1, 58, :_reduce_33,
  3, 58, :_reduce_34,
  2, 58, :_reduce_35,
  2, 58, :_reduce_36,
  3, 58, :_reduce_37,
  3, 58, :_reduce_38,
  3, 58, :_reduce_39,
  3, 58, :_reduce_40,
  3, 58, :_reduce_41,
  3, 58, :_reduce_42,
  3, 58, :_reduce_43,
  3, 58, :_reduce_44,
  3, 58, :_reduce_45,
  3, 58, :_reduce_46,
  3, 58, :_reduce_47,
  3, 58, :_reduce_48,
  3, 58, :_reduce_49,
  2, 58, :_reduce_50,
  2, 58, :_reduce_51,
  2, 58, :_reduce_52,
  3, 58, :_reduce_53,
  3, 58, :_reduce_54,
  3, 58, :_reduce_55 ]

racc_reduce_n = 56

racc_shift_n = 119

racc_token_table = {
  false => 0,
  :error => 1,
  TkComa => 2,
  TkPunto => 3,
  TkPuntoYComa => 4,
  TkDosPuntos => 5,
  TkParAbre => 6,
  TkParCierra => 7,
  TkCorcheteAbre => 8,
  TkCorcheteCierra => 9,
  TkLlaveAbre => 10,
  TkLlaveCierra => 11,
  TkHacer => 12,
  TkAsignacion => 13,
  TkSuma => 14,
  TkResta => 15,
  TkMult => 16,
  TkDiv => 17,
  TkMod => 18,
  TkConjuncion => 19,
  TkDisyuncion => 20,
  TkNegacion => 21,
  TkDesigual => 22,
  TkMenor => 23,
  TkMenorIgual => 24,
  TkMayor => 25,
  TkMayorIgual => 26,
  Tkigual => 27,
  TkSiguienteCar => 28,
  TkAnteriorCar => 29,
  TkValorAscii => 30,
  TkConcatenacion => 31,
  TkShift => 32,
  Tkwith => 33,
  Tktrue => 34,
  Tkfalse => 35,
  Tkvar => 36,
  Tkbegin => 37,
  Tkend => 38,
  Tkint => 39,
  Tkwhile => 40,
  Tkif => 41,
  Tkelse => 42,
  Tkbool => 43,
  Tkchar => 44,
  Tkarray => 45,
  Tkread => 46,
  Tkof => 47,
  Tkprint => 48,
  Tkfor => 49,
  Tkstep => 50,
  Tkfrom => 51,
  Tkto => 52,
  :UMINUS => 53,
  TkNum => 54,
  TkId => 55 }

racc_nt_base = 56

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\",\"",
  "\".\"",
  "\";\"",
  "\":\"",
  "\"(\"",
  "\")\"",
  "\"[\"",
  "\"]\"",
  "\"{\"",
  "\"}\"",
  "\"->\"",
  "\"<-\"",
  "\"+\"",
  "\"-\"",
  "\"*\"",
  "\"\\\\/\"",
  "\"%\"",
  "\"\\\\/\\\\\"",
  "\"\\\\\\\\/\"",
  "\"not\"",
  "\"/=\"",
  "\"<\"",
  "\"<=\"",
  "\">\"",
  "\">=\"",
  "\"=\"",
  "\"++\"",
  "\"--\"",
  "\"#\"",
  "\"::\"",
  "\"$\"",
  "\"with\"",
  "\"true\"",
  "\"false\"",
  "\"var\"",
  "\"begin\"",
  "\"end\"",
  "\"int\"",
  "\"while\"",
  "\"if\"",
  "\"else\"",
  "\"bool\"",
  "\"char\"",
  "\"array\"",
  "\"read\"",
  "\"of\"",
  "\"print\"",
  "\"for\"",
  "\"step\"",
  "\"from\"",
  "\"to\"",
  "UMINUS",
  "\"num\"",
  "\"id\"",
  "$start",
  "Instruccion",
  "Expresion",
  "Instrucciones",
  "ElementosSalida",
  "Paso",
  "LDeclaraciones",
  "ModoDeclaraciones",
  "Declaracion",
  "Variables",
  "Tipo",
  "ElementoSalida" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'Parser.y', 97)
  def _reduce_1(val, _values, result)
      result = Asignacion::new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 98)
  def _reduce_2(val, _values, result)
      result = Bloque::new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 99)
  def _reduce_3(val, _values, result)
      result = Read::new(val[1])  
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 100)
  def _reduce_4(val, _values, result)
      result = Print::new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 101)
  def _reduce_5(val, _values, result)
     result = Condicional_Else::new(val[1], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 103)
  def _reduce_6(val, _values, result)
    result = Iteracion_Det::new(val[1],val[3], val[5]), val[7]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 106)
  def _reduce_7(val, _values, result)
    result = Iteracion_Det::new(val[1],val[3], val[5], val[8], val[11])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 108)
  def _reduce_8(val, _values, result)
     result = Iteracion_Indet::new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 109)
  def _reduce_9(val, _values, result)
     result = LDeclaraciones::new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 110)
  def _reduce_10(val, _values, result)
     result = LDeclaraciones::new([])     
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 111)
  def _reduce_11(val, _values, result)
     result = Punto::new(val[0], val[2])   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 114)
  def _reduce_12(val, _values, result)
     result = [val[0]]           
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 115)
  def _reduce_13(val, _values, result)
     result = val[0] + [val[2]]  
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 118)
  def _reduce_14(val, _values, result)
     result =Declaraciones::new [val[1]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 121)
  def _reduce_15(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 122)
  def _reduce_16(val, _values, result)
     result = [val[0]] + val[2] 
    result
  end
.,.,

# reduce 17 omitted

module_eval(<<'.,.,', 'Parser.y', 126)
  def _reduce_18(val, _values, result)
     result = Declaracion::new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 128)
  def _reduce_19(val, _values, result)
     result = Declaracion::new(val[0], val[2], val[4], val[7])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 131)
  def _reduce_20(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 132)
  def _reduce_21(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 135)
  def _reduce_22(val, _values, result)
     result = val[0] + [val[2]]  
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 136)
  def _reduce_23(val, _values, result)
     result = [val[0]]           
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 141)
  def _reduce_24(val, _values, result)
     result = [val[0]]           
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 142)
  def _reduce_25(val, _values, result)
     result = val[0] + [val[2]]  
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 145)
  def _reduce_26(val, _values, result)
     result = val[0]             
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 146)
  def _reduce_27(val, _values, result)
     result = val[0]             
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 149)
  def _reduce_28(val, _values, result)
    result = Entero::new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 153)
  def _reduce_29(val, _values, result)
     result = Entero::new(val[0])         
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 154)
  def _reduce_30(val, _values, result)
     result = True::new()                 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 155)
  def _reduce_31(val, _values, result)
     result = False::new()                
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 156)
  def _reduce_32(val, _values, result)
     result = Variable::new(val[0])       
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 157)
  def _reduce_33(val, _values, result)
     result = ValorAscii::new(val[0])     
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 158)
  def _reduce_34(val, _values, result)
     result = Modulo::new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 159)
  def _reduce_35(val, _values, result)
     result = SiguienteCar::new(val[0])   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 160)
  def _reduce_36(val, _values, result)
     result = AnteriorCar::new(val[0])    
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 161)
  def _reduce_37(val, _values, result)
     result = Concatenacion::new(val[0], val[2])   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 162)
  def _reduce_38(val, _values, result)
     result = Multiplicacion::new(val[0], val[2])  
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 163)
  def _reduce_39(val, _values, result)
     result = Suma::new(val[0], val[2])            
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 164)
  def _reduce_40(val, _values, result)
     result = Resta::new(val[0], val[2])           
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 165)
  def _reduce_41(val, _values, result)
     result = Division::new(val[0], val[2])        
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 166)
  def _reduce_42(val, _values, result)
     result = Desigual::new(val[0], val[2])        
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 167)
  def _reduce_43(val, _values, result)
     result = Menor::new(val[0], val[2])           
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 168)
  def _reduce_44(val, _values, result)
     result = MenorIgual::new(val[0], val[2])      
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 169)
  def _reduce_45(val, _values, result)
     result = Igual::new(val[0], val[2])           
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 170)
  def _reduce_46(val, _values, result)
     result = Mayor::new(val[0], val[2])           
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 171)
  def _reduce_47(val, _values, result)
     result = MayorIgual::new(val[0], val[2])      
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 172)
  def _reduce_48(val, _values, result)
     result = And::new(val[0], val[2])     
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 173)
  def _reduce_49(val, _values, result)
     result = Or::new(val[0], val[2])      
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 174)
  def _reduce_50(val, _values, result)
     result = Not::new(val[1])             
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 175)
  def _reduce_51(val, _values, result)
     result = Shift::new(val[1])           
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 176)
  def _reduce_52(val, _values, result)
     result = Menos_Unario::new(val[1])    
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 177)
  def _reduce_53(val, _values, result)
     result = val[1]                       
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 178)
  def _reduce_54(val, _values, result)
     result = val[1]                       
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 179)
  def _reduce_55(val, _values, result)
     result = val[1]                       
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
