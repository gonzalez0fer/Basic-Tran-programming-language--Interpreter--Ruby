#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.14
# from Racc grammer file "".
#

require 'racc/parser.rb'
class Parser < Racc::Parser

module_eval(<<'...end Parser.y/module_eval...', 'Parser.y', 183)
    def parse(lexer)
          @yydebug = true # DEBUG
    end
...end Parser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    27,    39,    28,    57,    29,    65,    40,    99,    27,    26,
    28,   100,    29,    98,    57,    24,    27,    26,    28,    36,
    29,    35,    49,    24,    23,    26,    25,    52,    20,    21,
    31,    24,    23,    49,    25,    38,    20,    21,    52,    99,
    23,    67,    25,   100,    20,    21,   101,    95,    19,    22,
    94,    27,    14,    28,    57,    29,    19,    22,    69,    27,
    26,    28,    57,    29,    19,    22,    24,    27,    26,    28,
    11,    29,   107,    49,    24,    23,    26,    25,    52,    20,
    21,    49,    24,    23,    10,    25,    52,    20,    21,   109,
   110,    23,   107,    25,   112,    20,    21,   113,    35,    19,
    22,   115,    27,   103,    28,    17,    29,    19,    22,   nil,
   nil,    26,   nil,   nil,   nil,    19,    22,    24,   nil,   nil,
   nil,    57,   nil,   nil,   nil,   nil,    23,   nil,    25,   nil,
    20,    21,    46,    47,    45,    48,    41,    55,    56,   nil,
    49,    50,    51,    53,    54,    52,    42,    43,   nil,    44,
    19,    22,    27,   nil,    28,   nil,    29,   nil,    57,   nil,
    27,    26,    28,   nil,    29,   nil,   nil,    24,   nil,    26,
    96,    45,    48,    41,   nil,    24,    23,    49,    25,   nil,
    20,    21,    52,   nil,    23,   nil,    25,   nil,    20,    21,
    27,   nil,    28,   nil,    29,   nil,   nil,   nil,   nil,    26,
    19,    22,    27,   nil,    28,    24,    29,   nil,    19,    22,
   nil,    26,   nil,   nil,    23,   nil,    25,    24,    20,    21,
    27,   nil,    28,   nil,    29,   nil,    23,   nil,    25,    26,
    20,    21,    27,   nil,    28,    24,    29,   nil,    19,    22,
   nil,    26,   nil,   nil,    23,   nil,    25,    24,    20,    21,
    19,    22,   nil,   nil,   nil,   nil,    23,   nil,    25,   nil,
    20,    21,    27,   nil,    28,   nil,    29,   nil,    19,    22,
    27,    26,    28,   nil,    29,   nil,   nil,    24,   nil,    26,
    19,    22,   nil,   nil,   nil,    24,    23,   nil,    25,   nil,
    20,    21,   nil,   nil,    23,   nil,    25,   nil,    20,    21,
    27,   nil,    28,   nil,    29,   nil,   nil,   nil,   nil,    26,
    19,    22,    27,   nil,    28,    24,    29,   nil,    19,    22,
   nil,    26,   nil,   nil,    23,   nil,    25,    24,    20,    21,
    27,   nil,    28,   nil,    29,   nil,    23,   nil,    25,    26,
    20,    21,    27,   nil,    28,    24,    29,   nil,    19,    22,
   nil,    26,   nil,   nil,    23,   nil,    25,    24,    20,    21,
    19,    22,   nil,   nil,   nil,   nil,    23,   nil,    25,   nil,
    20,    21,    27,   nil,    28,   nil,    29,   nil,    19,    22,
    27,    26,    28,   nil,    29,   nil,   nil,    24,   nil,    26,
    19,    22,   nil,   nil,   nil,    24,    23,   nil,    25,   nil,
    20,    21,   nil,   nil,    23,   nil,    25,   nil,    20,    21,
    27,   nil,    28,   nil,    29,   nil,   nil,   nil,   nil,    26,
    19,    22,    27,   nil,    28,    24,    29,   nil,    19,    22,
   nil,    26,   nil,   nil,    23,   nil,    25,    24,    20,    21,
    27,   nil,    28,   nil,    29,   nil,    23,   nil,    25,    26,
    20,    21,    27,   nil,    28,    24,    29,   nil,    19,    22,
   nil,    26,   nil,   nil,    23,   nil,    25,    24,    20,    21,
    19,    22,   nil,   nil,   nil,   nil,    23,   nil,    25,   nil,
    20,    21,    27,   nil,    28,   nil,    29,   nil,    19,    22,
    27,    26,    28,   nil,    29,   nil,   nil,    24,   nil,    26,
    19,    22,   nil,   nil,   nil,    24,    23,   nil,    25,   nil,
    20,    21,   nil,    57,    23,   nil,    25,   nil,    20,    21,
    27,   nil,    28,   nil,    29,   nil,    45,    48,    41,    26,
    19,    22,    49,   nil,   nil,    24,   nil,    52,    19,    22,
   nil,    57,   nil,   nil,    23,   nil,    25,   nil,    20,    21,
   nil,   nil,    46,    47,    45,    48,    41,   nil,    17,    57,
    49,   nil,   nil,   nil,   nil,    52,   nil,   nil,    19,    22,
    46,    47,    45,    48,    41,    55,    56,   nil,    49,    50,
    51,    53,    54,    52,    42,    43,   nil,    44,    57,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    64,    46,
    47,    45,    48,    41,    55,    56,    57,    49,    50,    51,
    53,    54,    52,    42,    43,    66,    44,    46,    47,    45,
    48,    41,    55,    56,   nil,    49,    50,    51,    53,    54,
    52,    42,    43,    57,    44,   nil,   nil,   nil,   nil,   nil,
   nil,    89,   nil,   nil,    46,    47,    45,    48,    41,    55,
    56,    57,    49,    50,    51,    53,    54,    52,    42,    43,
   nil,    44,    46,    47,    45,    48,    41,    55,    56,    57,
    49,    50,    51,    53,    54,    52,    42,    43,   nil,    44,
    46,    47,    45,    48,    41,    55,    56,    57,    49,    50,
    51,    53,    54,    52,    42,    43,   nil,    44,    46,    47,
    45,    48,    41,    55,    56,   nil,    49,    50,    51,    53,
    54,    52,    42,    43,    57,    44,   nil,   nil,   nil,   nil,
    88,   nil,   nil,   nil,   nil,    46,    47,    45,    48,    41,
    55,    56,    57,    49,    50,    51,    53,    54,    52,    42,
    43,   nil,    44,    46,    47,    45,    48,    41,    55,    56,
   nil,    49,    50,    51,    53,    54,    52,    42,    43,    57,
    44,   nil,   nil,    87,   nil,   nil,   nil,   nil,   nil,   nil,
    46,    47,    45,    48,    41,    55,    56,   nil,    49,    50,
    51,    53,    54,    52,    42,    43,    57,    44,   nil,   nil,
   nil,   105,   nil,   nil,   nil,   104,   nil,    46,    47,    45,
    48,    41,    55,    56,    57,    49,    50,    51,    53,    54,
    52,    42,    43,   nil,    44,    46,    47,    45,    48,    41,
    55,    56,    57,    49,    50,    51,    53,    54,    52,    42,
    43,   nil,   nil,    46,    47,    45,    48,    41,    55,    56,
    57,    49,    50,    51,    53,    54,    52,    42,    43,   nil,
   nil,    46,    47,    45,    48,    41,    55,    57,   nil,    49,
   nil,   nil,   nil,   nil,    52,   nil,   nil,   nil,    46,    47,
    45,    48,    41,    57,   nil,   nil,    49,   nil,   nil,   nil,
   nil,    52,   nil,   nil,    46,    47,    45,    48,    41,    55,
    56,    57,    49,   -54,   -54,   -54,   -54,    52,   nil,   nil,
   nil,   nil,    46,    47,    45,    48,    41,    55,    56,    57,
    49,   -54,   -54,   -54,   -54,    52,   nil,   nil,   nil,   nil,
    46,    47,    45,    48,    41,    55,    56,    57,    49,   -54,
   -54,   -54,   -54,    52,   nil,   nil,   nil,   nil,    46,    47,
    45,    48,    41,    55,    56,   nil,    49,   -54,   -54,   -54,
   -54,    52,     9,   nil,   nil,   nil,     3,   nil,   nil,     8,
     6,   nil,     9,   nil,   nil,     4,     3,     5,     7,     8,
     6,   nil,     9,   nil,     2,     4,     3,     5,     7,     8,
     6,   nil,     9,   nil,     2,     4,     3,     5,     7,     8,
     6,   nil,     9,   nil,     2,     4,     3,     5,     7,     8,
     6,   nil,     9,   nil,     2,     4,     3,     5,     7,     8,
     6,   nil,     9,   nil,     2,     4,     3,     5,     7,     8,
     6,   nil,   nil,   nil,     2,     4,   nil,     5,     7,   nil,
   nil,   nil,   nil,   nil,     2 ]

racc_action_check = [
    57,    12,    57,    77,    57,    31,    15,    94,    65,    57,
    65,    94,    65,    94,    60,    57,    56,    65,    56,    10,
    56,     9,    77,    65,    57,    56,    57,    77,    57,    57,
     7,    56,    65,    60,    65,    12,    65,    65,    60,   112,
    56,    33,    56,   112,    56,    56,    95,    68,    57,    57,
    68,    55,     4,    55,    74,    55,    65,    65,    35,    96,
    55,    96,    72,    96,    56,    56,    55,     5,    96,     5,
     2,     5,   103,    74,    96,    55,     5,    55,    74,    55,
    55,    72,     5,    96,     1,    96,    72,    96,    96,   105,
   106,     5,   109,     5,   110,     5,     5,   111,    67,    55,
    55,   113,     6,    98,     6,     5,     6,    96,    96,   nil,
   nil,     6,   nil,   nil,   nil,     5,     5,     6,   nil,   nil,
   nil,    91,   nil,   nil,   nil,   nil,     6,   nil,     6,   nil,
     6,     6,    91,    91,    91,    91,    91,    91,    91,   nil,
    91,    91,    91,    91,    91,    91,    91,    91,   nil,    91,
     6,     6,     8,   nil,     8,   nil,     8,   nil,    75,   nil,
    54,     8,    54,   nil,    54,   nil,   nil,     8,   nil,    54,
    91,    75,    75,    75,   nil,    54,     8,    75,     8,   nil,
     8,     8,    75,   nil,    54,   nil,    54,   nil,    54,    54,
    53,   nil,    53,   nil,    53,   nil,   nil,   nil,   nil,    53,
     8,     8,    11,   nil,    11,    53,    11,   nil,    54,    54,
   nil,    11,   nil,   nil,    53,   nil,    53,    11,    53,    53,
    52,   nil,    52,   nil,    52,   nil,    11,   nil,    11,    52,
    11,    11,    51,   nil,    51,    52,    51,   nil,    53,    53,
   nil,    51,   nil,   nil,    52,   nil,    52,    51,    52,    52,
    11,    11,   nil,   nil,   nil,   nil,    51,   nil,    51,   nil,
    51,    51,    50,   nil,    50,   nil,    50,   nil,    52,    52,
    24,    50,    24,   nil,    24,   nil,   nil,    50,   nil,    24,
    51,    51,   nil,   nil,   nil,    24,    50,   nil,    50,   nil,
    50,    50,   nil,   nil,    24,   nil,    24,   nil,    24,    24,
    25,   nil,    25,   nil,    25,   nil,   nil,   nil,   nil,    25,
    50,    50,    26,   nil,    26,    25,    26,   nil,    24,    24,
   nil,    26,   nil,   nil,    25,   nil,    25,    26,    25,    25,
    27,   nil,    27,   nil,    27,   nil,    26,   nil,    26,    27,
    26,    26,    28,   nil,    28,    27,    28,   nil,    25,    25,
   nil,    28,   nil,   nil,    27,   nil,    27,    28,    27,    27,
    26,    26,   nil,   nil,   nil,   nil,    28,   nil,    28,   nil,
    28,    28,    29,   nil,    29,   nil,    29,   nil,    27,    27,
    49,    29,    49,   nil,    49,   nil,   nil,    29,   nil,    49,
    28,    28,   nil,   nil,   nil,    49,    29,   nil,    29,   nil,
    29,    29,   nil,   nil,    49,   nil,    49,   nil,    49,    49,
    48,   nil,    48,   nil,    48,   nil,   nil,   nil,   nil,    48,
    29,    29,    47,   nil,    47,    48,    47,   nil,    49,    49,
   nil,    47,   nil,   nil,    48,   nil,    48,    47,    48,    48,
    46,   nil,    46,   nil,    46,   nil,    47,   nil,    47,    46,
    47,    47,    45,   nil,    45,    46,    45,   nil,    48,    48,
   nil,    45,   nil,   nil,    46,   nil,    46,    45,    46,    46,
    47,    47,   nil,   nil,   nil,   nil,    45,   nil,    45,   nil,
    45,    45,    44,   nil,    44,   nil,    44,   nil,    46,    46,
    41,    44,    41,   nil,    41,   nil,   nil,    44,   nil,    41,
    45,    45,   nil,   nil,   nil,    41,    44,   nil,    44,   nil,
    44,    44,   nil,    76,    41,   nil,    41,   nil,    41,    41,
    40,   nil,    40,   nil,    40,   nil,    76,    76,    76,    40,
    44,    44,    76,   nil,   nil,    40,   nil,    76,    41,    41,
   nil,    58,   nil,   nil,    40,   nil,    40,   nil,    40,    40,
   nil,   nil,    58,    58,    58,    58,    58,   nil,    40,    30,
    58,   nil,   nil,   nil,   nil,    58,   nil,   nil,    40,    40,
    30,    30,    30,    30,    30,    30,    30,   nil,    30,    30,
    30,    30,    30,    30,    30,    30,   nil,    30,    86,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    30,    86,
    86,    86,    86,    86,    86,    86,    32,    86,    86,    86,
    86,    86,    86,    86,    86,    32,    86,    32,    32,    32,
    32,    32,    32,    32,   nil,    32,    32,    32,    32,    32,
    32,    32,    32,    63,    32,   nil,   nil,   nil,   nil,   nil,
   nil,    63,   nil,   nil,    63,    63,    63,    63,    63,    63,
    63,    81,    63,    63,    63,    63,    63,    63,    63,    63,
   nil,    63,    81,    81,    81,    81,    81,    81,    81,    37,
    81,    81,    81,    81,    81,    81,    81,    81,   nil,    81,
    37,    37,    37,    37,    37,    37,    37,    18,    37,    37,
    37,    37,    37,    37,    37,    37,   nil,    37,    18,    18,
    18,    18,    18,    18,    18,   nil,    18,    18,    18,    18,
    18,    18,    18,    18,    62,    18,   nil,   nil,   nil,   nil,
    62,   nil,   nil,   nil,   nil,    62,    62,    62,    62,    62,
    62,    62,    78,    62,    62,    62,    62,    62,    62,    62,
    62,   nil,    62,    78,    78,    78,    78,    78,    78,    78,
   nil,    78,    78,    78,    78,    78,    78,    78,    78,    61,
    78,   nil,   nil,    61,   nil,   nil,   nil,   nil,   nil,   nil,
    61,    61,    61,    61,    61,    61,    61,   nil,    61,    61,
    61,    61,    61,    61,    61,    61,   102,    61,   nil,   nil,
   nil,   102,   nil,   nil,   nil,   102,   nil,   102,   102,   102,
   102,   102,   102,   102,    59,   102,   102,   102,   102,   102,
   102,   102,   102,   nil,   102,    59,    59,    59,    59,    59,
    59,    59,    73,    59,    59,    59,    59,    59,    59,    59,
    59,   nil,   nil,    73,    73,    73,    73,    73,    73,    73,
    85,    73,    73,    73,    73,    73,    73,    73,    73,   nil,
   nil,    85,    85,    85,    85,    85,    85,    84,   nil,    85,
   nil,   nil,   nil,   nil,    85,   nil,   nil,   nil,    84,    84,
    84,    84,    84,    83,   nil,   nil,    84,   nil,   nil,   nil,
   nil,    84,   nil,   nil,    83,    83,    83,    83,    83,    83,
    83,    82,    83,    83,    83,    83,    83,    83,   nil,   nil,
   nil,   nil,    82,    82,    82,    82,    82,    82,    82,    80,
    82,    82,    82,    82,    82,    82,   nil,   nil,   nil,   nil,
    80,    80,    80,    80,    80,    80,    80,    79,    80,    80,
    80,    80,    80,    80,   nil,   nil,   nil,   nil,    79,    79,
    79,    79,    79,    79,    79,   nil,    79,    79,    79,    79,
    79,    79,    64,   nil,   nil,   nil,    64,   nil,   nil,    64,
    64,   nil,     3,   nil,   nil,    64,     3,    64,    64,     3,
     3,   nil,   104,   nil,    64,     3,   104,     3,     3,   104,
   104,   nil,    66,   nil,     3,   104,    66,   104,   104,    66,
    66,   nil,     0,   nil,   104,    66,     0,    66,    66,     0,
     0,   nil,    39,   nil,    66,     0,    39,     0,     0,    39,
    39,   nil,   115,   nil,     0,    39,   115,    39,    39,   115,
   115,   nil,   nil,   nil,    39,   115,   nil,   115,   115,   nil,
   nil,   nil,   nil,   nil,   115 ]

racc_action_pointer = [
   959,    84,    57,   929,    -3,    61,    96,   -25,   146,   -15,
    19,   196,    -3,   nil,   nil,     4,   nil,   nil,   684,   nil,
   nil,   nil,   nil,   nil,   264,   294,   306,   324,   336,   366,
   556,   -46,   603,    37,   nil,     3,   nil,   666,   nil,   969,
   514,   484,   nil,   nil,   476,   446,   434,   416,   404,   374,
   256,   226,   214,   184,   154,    45,    10,    -6,   538,   801,
    11,   756,   711,   630,   919,     2,   949,    62,    45,   nil,
   nil,   nil,    59,   819,    51,   155,   510,     0,   729,   924,
   906,   648,   888,   870,   854,   837,   585,   nil,   nil,   nil,
   nil,   118,   nil,   nil,   -32,    -9,    53,   nil,    95,   nil,
   nil,   nil,   783,    18,   939,    39,    81,   nil,   nil,    38,
    47,    88,     0,    89,   nil,   979,   nil ]

racc_action_default = [
   -10,   -54,   -54,   -10,   -54,   -54,   -54,   -54,   -54,   -54,
   -54,   -54,   -54,   -19,    -3,    -4,   -21,   -23,   -24,   -26,
   -27,   -28,   -29,   -30,   -54,   -54,   -54,   -54,   -54,   -54,
   -54,   -54,   -54,    -9,   -11,   -54,   117,    -1,    -2,   -10,
   -54,   -54,   -32,   -33,   -54,   -54,   -54,   -54,   -54,   -54,
   -54,   -54,   -54,   -54,   -54,   -54,   -54,   -54,   -47,   -48,
   -50,   -54,   -54,   -54,   -10,   -54,   -10,   -54,   -54,   -18,
   -20,   -22,   -31,   -34,   -35,   -36,   -37,   -38,   -39,   -40,
   -41,   -42,   -43,   -44,   -45,   -46,   -49,   -51,   -52,   -53,
    -5,   -54,    -8,   -12,   -54,   -54,   -54,   -13,   -54,   -15,
   -16,   -17,   -54,   -54,   -10,   -54,   -54,   -25,    -6,   -54,
   -54,   -54,   -54,   -54,   -14,   -10,    -7 ]

racc_goto_table = [
     1,    34,    30,    13,    32,   106,    68,    37,    97,    12,
    33,   111,    15,   nil,   nil,   nil,   nil,   nil,   nil,    16,
    58,    59,    60,    61,    62,    63,   114,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,    72,   nil,    70,
    73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
    83,    84,    85,    86,    71,   nil,   nil,   nil,   nil,    93,
   nil,    91,   nil,   nil,    90,   nil,    92,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   102,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   108,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   116 ]

racc_goto_check = [
     1,     7,     2,     1,     2,     5,     8,     2,     9,     3,
     6,     5,     4,   nil,   nil,   nil,   nil,   nil,   nil,    10,
     2,     2,     2,     2,     2,     2,     9,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,     2,   nil,     1,
     2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     2,     2,     2,     2,    10,   nil,   nil,   nil,   nil,     7,
   nil,     2,   nil,   nil,     1,   nil,     1,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,     2,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,     1,   nil,   nil,   nil,   nil,   nil,
   nil,   nil,   nil,   nil,   nil,     1 ]

racc_goto_pointer = [
   nil,     0,    -4,     6,     7,   -98,     1,    -8,   -29,   -86,
    14 ]

racc_goto_default = [
   nil,   nil,    18,   nil,   nil,   nil,   nil,   nil,   nil,   nil,
   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  3, 57, :_reduce_1,
  3, 57, :_reduce_2,
  2, 57, :_reduce_3,
  2, 57, :_reduce_4,
  4, 57, :_reduce_5,
  8, 57, :_reduce_6,
  12, 57, :_reduce_7,
  4, 57, :_reduce_8,
  2, 57, :_reduce_9,
  0, 57, :_reduce_10,
  1, 62, :_reduce_11,
  3, 62, :_reduce_12,
  4, 63, :_reduce_13,
  9, 63, :_reduce_14,
  1, 65, :_reduce_15,
  1, 65, :_reduce_16,
  3, 64, :_reduce_17,
  1, 64, :_reduce_18,
  1, 59, :_reduce_19,
  3, 59, :_reduce_20,
  1, 60, :_reduce_21,
  3, 60, :_reduce_22,
  1, 66, :_reduce_23,
  1, 66, :_reduce_24,
  1, 61, :_reduce_25,
  1, 58, :_reduce_26,
  1, 58, :_reduce_27,
  1, 58, :_reduce_28,
  1, 58, :_reduce_29,
  1, 58, :_reduce_30,
  3, 58, :_reduce_31,
  2, 58, :_reduce_32,
  2, 58, :_reduce_33,
  3, 58, :_reduce_34,
  3, 58, :_reduce_35,
  3, 58, :_reduce_36,
  3, 58, :_reduce_37,
  3, 58, :_reduce_38,
  3, 58, :_reduce_39,
  3, 58, :_reduce_40,
  3, 58, :_reduce_41,
  3, 58, :_reduce_42,
  3, 58, :_reduce_43,
  3, 58, :_reduce_44,
  3, 58, :_reduce_45,
  3, 58, :_reduce_46,
  2, 58, :_reduce_47,
  2, 58, :_reduce_48,
  3, 58, :_reduce_49,
  2, 58, :_reduce_50,
  3, 58, :_reduce_51,
  3, 58, :_reduce_52,
  3, 58, :_reduce_53 ]

racc_reduce_n = 54

racc_shift_n = 117

racc_token_table = {
  false => 0,
  :error => 1,
  TkComa => 2,
  TkPunto => 3,
  TkPuntoYComa => 4,
  TkDosPuntos => 5,
  TkParAbre => 6,
  TkParCierra => 7,
  TkCorcheteAbre => 8,
  TkCorcheteCierra => 9,
  TkLlaveAbre => 10,
  TkLlaveCierra => 11,
  TkHacer => 12,
  TkAsignacion => 13,
  TkSuma => 14,
  TkResta => 15,
  TkMult => 16,
  TkDiv => 17,
  TkMod => 18,
  TkConjuncion => 19,
  TkDisyuncion => 20,
  TkNegacion => 21,
  TkDesigual => 22,
  TkMenor => 23,
  TkMenorIgual => 24,
  TkMayor => 25,
  TkMayorIgual => 26,
  Tkigual => 27,
  TkSiguienteCar => 28,
  TkAnteriorCar => 29,
  TkValorAscii => 30,
  TkConcatenacion => 31,
  TkShift => 32,
  Tkwith => 33,
  Tktrue => 34,
  Tkfalse => 35,
  Tkvar => 36,
  Tkbegin => 37,
  Tkend => 38,
  Tkint => 39,
  Tkwhile => 40,
  Tkif => 41,
  Tkelse => 42,
  Tkbool => 43,
  Tkchar => 44,
  Tkarray => 45,
  Tkread => 46,
  Tkof => 47,
  Tkprint => 48,
  Tkfor => 49,
  Tkstep => 50,
  Tkfrom => 51,
  Tkto => 52,
  :UMINUS => 53,
  TkNum => 54,
  TkId => 55 }

racc_nt_base = 56

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "\",\"",
  "\".\"",
  "\";\"",
  "\":\"",
  "\"(\"",
  "\")\"",
  "\"[\"",
  "\"]\"",
  "\"{\"",
  "\"}\"",
  "\"->\"",
  "\"<-\"",
  "\"+\"",
  "\"-\"",
  "\"*\"",
  "\"/\"",
  "\"%\"",
  "\"/\\\\\"",
  "\"\\\\/\"",
  "\"not\"",
  "\"/=\"",
  "\"<\"",
  "\"<=\"",
  "\">\"",
  "\">=\"",
  "\"=\"",
  "\"++\"",
  "\"--\"",
  "\"#\"",
  "\"::\"",
  "\"$\"",
  "\"with\"",
  "\"true\"",
  "\"false\"",
  "\"var\"",
  "\"begin\"",
  "\"end\"",
  "\"int\"",
  "\"while\"",
  "\"if\"",
  "\"else\"",
  "\"bool\"",
  "\"char\"",
  "\"array\"",
  "\"read\"",
  "\"of\"",
  "\"print\"",
  "\"for\"",
  "\"step\"",
  "\"from\"",
  "\"to\"",
  "UMINUS",
  "\"num\"",
  "\"id\"",
  "$start",
  "Instruccion",
  "Expresion",
  "Instrucciones",
  "ElementosSalida",
  "Paso",
  "LDeclaraciones",
  "Declaracion",
  "Variables",
  "Tipo",
  "ElementoSalida" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'Parser.y', 95)
  def _reduce_1(val, _values, result)
      result = Asignacion::new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 97)
  def _reduce_2(val, _values, result)
      result = Bloque::new(val[1])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 99)
  def _reduce_3(val, _values, result)
      result = Read::new(val[1])  
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 101)
  def _reduce_4(val, _values, result)
      result = Print::new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 103)
  def _reduce_5(val, _values, result)
     result = Condicional_Else::new(val[1], val[3])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 106)
  def _reduce_6(val, _values, result)
    result = Iteracion_Det::new(val[1],val[3], val[5]), val[7]
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 109)
  def _reduce_7(val, _values, result)
    result = Iteracion_Det::new(val[1],val[3], val[5], val[8], val[11])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 111)
  def _reduce_8(val, _values, result)
     result = Iteracion_Indet::new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 112)
  def _reduce_9(val, _values, result)
     result = Declaraciones::new(val[1]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 113)
  def _reduce_10(val, _values, result)
     result = Declaraciones::new([])     
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 117)
  def _reduce_11(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 118)
  def _reduce_12(val, _values, result)
     result = val[0] + [val[2]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 121)
  def _reduce_13(val, _values, result)
     result = Declaracion::new(val[1], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 123)
  def _reduce_14(val, _values, result)
     result = Declaracion::new(val[1], val[3], val[5], val[8])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 126)
  def _reduce_15(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 127)
  def _reduce_16(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 130)
  def _reduce_17(val, _values, result)
     result = val[0] + [val[2]]  
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 131)
  def _reduce_18(val, _values, result)
     result = [val[0]]           
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 134)
  def _reduce_19(val, _values, result)
     result = [val[0]]           
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 135)
  def _reduce_20(val, _values, result)
     result = val[0] + [val[2]]  
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 138)
  def _reduce_21(val, _values, result)
     result = [val[0]]           
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 139)
  def _reduce_22(val, _values, result)
     result = val[0] + [val[2]]  
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 142)
  def _reduce_23(val, _values, result)
     result = val[0]             
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 143)
  def _reduce_24(val, _values, result)
     result = val[0]             
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 146)
  def _reduce_25(val, _values, result)
    result = Entero::new(val[0])
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 150)
  def _reduce_26(val, _values, result)
     result = Entero::new(val[0])         
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 151)
  def _reduce_27(val, _values, result)
     result = True::new()                 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 152)
  def _reduce_28(val, _values, result)
     result = False::new()                
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 153)
  def _reduce_29(val, _values, result)
     result = Variable::new(val[0])       
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 154)
  def _reduce_30(val, _values, result)
     result = ValorAscii::new(val[0])     
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 155)
  def _reduce_31(val, _values, result)
     result = Modulo::new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 156)
  def _reduce_32(val, _values, result)
     result = SiguienteCar::new(val[0])   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 157)
  def _reduce_33(val, _values, result)
     result = AnteriorCar::new(val[0])    
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 158)
  def _reduce_34(val, _values, result)
     result = Concatenacion::new(val[0], val[2])   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 159)
  def _reduce_35(val, _values, result)
     result = Multiplicacion::new(val[0], val[2])  
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 160)
  def _reduce_36(val, _values, result)
     result = Suma::new(val[0], val[2])            
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 161)
  def _reduce_37(val, _values, result)
     result = Resta::new(val[0], val[2])           
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 162)
  def _reduce_38(val, _values, result)
     result = Division::new(val[0], val[2])        
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 163)
  def _reduce_39(val, _values, result)
     result = Desigual::new(val[0], val[2])        
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 164)
  def _reduce_40(val, _values, result)
     result = Menor::new(val[0], val[2])           
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 165)
  def _reduce_41(val, _values, result)
     result = MenorIgual::new(val[0], val[2])      
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 166)
  def _reduce_42(val, _values, result)
     result = Igual::new(val[0], val[2])           
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 167)
  def _reduce_43(val, _values, result)
     result = Mayor::new(val[0], val[2])           
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 168)
  def _reduce_44(val, _values, result)
     result = MayorIgual::new(val[0], val[2])      
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 169)
  def _reduce_45(val, _values, result)
     result = And::new(val[0], val[2])     
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 170)
  def _reduce_46(val, _values, result)
     result = Or::new(val[0], val[2])      
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 171)
  def _reduce_47(val, _values, result)
     result = Not::new(val[1])             
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 172)
  def _reduce_48(val, _values, result)
     result = Shift::new(val[1])           
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 173)
  def _reduce_49(val, _values, result)
     result = Punto::new(val[0], val[2])   
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 174)
  def _reduce_50(val, _values, result)
     result = Menos_Unario::new(val[1])    
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 175)
  def _reduce_51(val, _values, result)
     result = val[1]                       
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 176)
  def _reduce_52(val, _values, result)
     result = val[1]                       
    result
  end
.,.,

module_eval(<<'.,.,', 'Parser.y', 177)
  def _reduce_53(val, _values, result)
     result = val[1]                       
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class Parser
